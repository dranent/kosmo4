<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
	
	<context:component-scan base-package="com.biz.**" />
	
	<!-- DBCP, ORM MapperInterface 설정 -->
	<context:property-placeholder location="classpath:*.properties" /> 
	<bean id="original_dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
       <property name="driverClassName" value="${driver}"></property>
        <property name="url" value="${url}"></property>
        <property name="username" value="${uid}"></property>
        <property name="password" value="${upw}"></property>
    </bean>
    
   
	<!-- Mybaits console sql log write  -->	 
    <bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
        <constructor-arg ref="original_dataSource" />
        <property name="logFormatter">
            <bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
                <property name="loggingType" value="MULTI_LINE" />
                <property name="sqlPrefix" value="SQL         :  "/>
            </bean>
        </property>
    </bean>


    
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	  <property name="dataSource" ref="dataSource" />
	  <property name="mapperLocations" value="classpath*:*-map.xml" />
	  <property name="configLocation" value="classpath:config-mybatis.xml" />
	</bean>
	<!-- @Repository MapperInterface를 사용할 경우 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> 
		<property name="basePackage" value="com.biz.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	<!-- @Repository DAOClass 사용할 경우 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
	  <constructor-arg index="0" ref="sqlSessionFactory" />
	</bean> 
	
	
	
	<!-- AOP TX
	@Transactional 
	<tx:annotation-driven transaction-manager="txManager" />
	-->
	<aop:aspectj-autoproxy />
	<bean id="txManagerIDID" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	
	<!-- google Class Bean설정 추가 -->
	<!-- 클라이언트ID와 보안비밀 세팅-->
	<bean id="googleConnectionFactory"
		class="org.springframework.social.google.connect.GoogleConnectionFactory">
		<constructor-arg value="478571279368-k78fvmdai327j2g9nr0agii41ioipola.apps.googleusercontent.com" />
		<constructor-arg value="_-Lmcn7Ft0JEVLu3g5XqwJC1" />
	</bean>
	<!-- 승인된 자바스크립트 원본과 승인된 리디렉션 URI -->
	<bean id="googleOAuth2Parameters" class="org.springframework.social.oauth2.OAuth2Parameters">
		<property name="scope" value="https://www.googleapis.com/auth/plus.login" />
		<property name="redirectUri" value="http://localhost/oauth2callback" />
	</bean>	
		
</beans>
